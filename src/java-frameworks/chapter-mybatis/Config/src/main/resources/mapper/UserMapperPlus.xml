<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.UserMapperPlus">

    <!-- 自定义结果集映射，不能与resultType同时使用 -->
    <resultMap id="userResult" type="org.example.pojo.UserPlus">
        <!-- 指定主键的封装 -->
        <!-- column指定列名，property指定对应的JavaBean属性 -->
        <id column="pk_id" property="id"/>
        <!-- 指定普通列封装 -->
        <result column="uk_uname" property="uname"/>
        <!-- 不指定的列会自动封装，建议添加全部映射规则 -->
        <result column="password" property="password"/>
        <result column="email" property="email"/>
    </resultMap>
    <!-- namespace:名称空间 -->
    <!-- id:唯一标识，resultType:返回值类型（起别名后可直接使用别名，建议使用全类名）， -->
    <!-- #{id}:从传过来的参数中获取id值 -->
    <!-- <select id="getUserById" resultMap="userResult"> -->
    <!--     SELECT `pk_id`, `uk_uname`, `password`, `email` FROM t_user -->
    <!--     WHERE  pk_id = #{pk_id} -->
    <!-- </select> -->
    
    <resultMap id="userRefResult" type="org.example.pojo.UserPlus">
        <id column="user_id" property="id"/>
        <result column="user_name" property="uname"/>
        <result column="user_password" property="password"/>
        <result column="user_email" property="email"/>
        <!-- 级联属性 -->
        <result column="dept_id" property="department.id"/>
        <result column="dept_name"
                property="department.deptName"></result>
    </resultMap>

    <resultMap id="userRefResult2" type="org.example.pojo.UserPlus">
        <id column="user_id" property="id"/>
        <result column="user_name" property="uname"/>
        <result column="user_password" property="password"/>
        <result column="user_email" property="email"/>
        <!-- association级联属性 -->
       <association property="department"
                    javaType="org.example.pojo.Department">
           <id column="dept_id" property="id"/>
           <result column="dept_name" property="deptName"/>
       </association>
    </resultMap>

    <!-- User getUserAndDepartment(Integer id); -->
    <select id="getUserAndDepartment" resultMap="userRefResult2">
        SELECT tu.pk_id user_id, tu.uk_uname user_name, tu.password user_password, tu.email user_email,
        td.pk_id dept_id, td.uk_dept_name dept_name
        FROM t_user tu , t_dept td WHERE tu.dept_id = td.pk_id AND tu.pk_id =
        #{id}
    </select>

    <!-- resutMap分步查询，可以配置延迟加载 -->
    <resultMap id="userResultByStep"
               type="org.example.pojo.UserPlus">
        <id column="pk_id" property="id"/>
        <result column="uk_uname" property="uname"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <!-- select表明当前属性是调用指定方法查询的结果 -->
        <!-- column将指定列值传入方法 -->
        <association property="department"
                     select="org.example.dao.DepartmentMapper.getDepartmentById"
                    column="dept_id">
        </association>
    </resultMap>

    <!-- getUserByIdStep -->
    <select id="getUserByIdStep" resultMap="userResultByStep">
        SELECT `pk_id`, `uk_uname`, `password`, `email`, `dept_id`
        FROM t_user WHERE `pk_id`  = #{id}
    </select>

    <!-- getUserByDepartment -->
    <select id="getUserByDepartment"
            resultType="org.example.pojo.UserPlus">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email`
        FROM t_user WHERE `dept_id`  = #{deptId}
    </select>
</mapper>