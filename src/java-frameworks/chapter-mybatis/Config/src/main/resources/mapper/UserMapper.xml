<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.UserMapper">
    <!-- namespace:名称空间 -->
    <!-- id:唯一标识，resultType:返回值类型（起别名后可直接使用别名，建议使用全类名）， -->
    <!-- #{id}:从传过来的参数中获取id值 -->
    <select id="getUserById" resultType="org.example.pojo.User">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM t_user
        WHERE  pk_id = #{pk_id}
    </select>

    <select id="getUserByNameAndPasswords" resultType="org.example.pojo.User">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM `t_user`
        WHERE `uk_uname` = #{uname} AND `password` = #{password}
    </select>

    <select id="getUserByMap" resultType="org.example.pojo.User">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM `t_user`
        WHERE `uk_uname` = #{uname} AND `password` = #{password}
    </select>

    <!-- 如果返回的是集合，resultType的值为集合中元素的类型 -->
    <select id="getUserByName" resultType="org.example.pojo.User">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM `t_user`
        WHERE `uk_uname` like #{uname}
    </select>

    <select id="getUserByIdReturnedMap" resultType="map">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM `t_user`
        WHERE `pk_id` like #{id}
    </select>

    <select id="getUserByNameLike" resultType="org.example.pojo.User">
        SELECT `pk_id` id, `uk_uname` uname, `password`, `email` FROM `t_user`
        WHERE `uk_uname` like #{uname}
    </select>

    <!-- void addUser(User user); -->
    <!-- useGeneratedKeys="true"使用自增主键获取主键值策略 -->
    <!-- keyProperty指定对应的主键属性，即获取到主键值后，将该值封装给JavaBean的哪个属性 -->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `t_user`(`uk_uname`,`password`,`email`) VALUES (#{uname},
        #{password}, #{email})
    </insert>

    <!-- void updateUser(User user); -->
    <update id="updateUser">
        UPDATE `t_user` SET
        `uk_uname`=#{uname},`password`=#{password},`email`=#{email}
        WHERE `pk_id`=#{id}
    </update>

    <!-- void deleteUser(Integer id); -->
    <delete id="deleteUser">
        DELETE FROM `t_user` WHERE `pk_id`=#{id}
    </delete>

    <update id="setPrimaryKey">
        <!-- ALTER TABLE `t_user` AUTO_INCREMENT = 1 -->
    </update>
</mapper>